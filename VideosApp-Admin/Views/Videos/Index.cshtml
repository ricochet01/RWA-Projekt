@using VideosApp.Model
@using VideosApp.Interface
@using VideosApp.Repository
@model VideosApp_Admin.Paging.PaginatedList<VideosApp.Model.Video>

@{
    ViewData["Title"] = "All videos";
}

<h1>Videos</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
	<div class="form-actions no-color">
		<p>
			Name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
			<input type="submit" value="Search" class="btn btn-primary" /> |
			<a asp-action="Index">Back to Full List</a>
		</p>
	</div>
</form>

<table class="table">
	<thead>
	<tr>
		<th>
			@Html.DisplayNameFor(model => model.FirstOrDefault().CreatedAt)
		</th>
		<th>
			<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
				   asp-route-currentFilter="@ViewData["CurrentFilter"]">
				@Html.DisplayNameFor(model => model.FirstOrDefault().Name)
			</a>
		</th>
		<th>
			@Html.DisplayNameFor(model => model.FirstOrDefault().Description)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.FirstOrDefault().TotalSeconds)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.FirstOrDefault().StreamingUrl)
		</th>
		<th>
			<a asp-action="Index" asp-route-sortOrder="@ViewData["GenreSortParm"]"
				   asp-route-currentFilter="@ViewData["CurrentFilter"]">
				@Html.DisplayNameFor(model => model.FirstOrDefault().Genre)
			</a>
		</th>
		<th></th>
	</tr>
	</thead>
	<tbody>
	@foreach (var item in Model) {
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.CreatedAt)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Name)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Description)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.TotalSeconds)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.StreamingUrl)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Genre.Name)
			</td>
			<td>
				<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
				<a asp-action="Details" asp-route-id="@item.Id">Details</a> |
				<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
			</td>
		</tr>
	}
	</tbody>
</table>
@{
	var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
	var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default border @prevDisabled">
	Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default border @nextDisabled">
	Next
</a>
